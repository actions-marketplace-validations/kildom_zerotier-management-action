{
  "version": 3,
  "sources": ["../src/tools.ts"],
  "sourcesContent": ["\nimport * as fs from 'fs';\n\n\nfunction assignedAddresses() {\n    let input = fs.readFileSync(process.stdin.fd, 'latin1');\n    let assigned = false;\n    for (let network of JSON.parse(input)) {\n        assigned = assigned || network.assignedAddresses.length > 0;\n    }\n    process.exitCode = assigned ? 0 : 1;\n}\n\nfunction showIp() {\n    let input = fs.readFileSync(process.stdin.fd, 'latin1');\n    let ip = '';\n    for (let network of JSON.parse(input)) {\n        for (let mask of network.assignedAddresses) {\n            ip = mask.trim();\n            let pos = ip.indexOf('/');\n            if (pos > 0) {\n                ip = ip.substring(0, pos).trim();;\n            }\n        }\n    }\n    if (ip !== '') {\n        console.log(ip);\n        process.exitCode = 0;\n    } else {\n        process.exitCode = 1;\n    }\n}\n\nprocess.exitCode = 99;\n\nswitch(process.argv[2]) {\n    case 'assigned':\n        assignedAddresses();\n        break;\n    case 'ip':\n        showIp();\n        break;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAoB;AAGpB,SAAS,oBAAoB;AACzB,MAAI,QAAW,gBAAa,QAAQ,MAAM,IAAI,QAAQ;AACtD,MAAI,WAAW;AACf,WAAS,WAAW,KAAK,MAAM,KAAK,GAAG;AACnC,eAAW,YAAY,QAAQ,kBAAkB,SAAS;AAAA,EAC9D;AACA,UAAQ,WAAW,WAAW,IAAI;AACtC;AAEA,SAAS,SAAS;AACd,MAAI,QAAW,gBAAa,QAAQ,MAAM,IAAI,QAAQ;AACtD,MAAI,KAAK;AACT,WAAS,WAAW,KAAK,MAAM,KAAK,GAAG;AACnC,aAAS,QAAQ,QAAQ,mBAAmB;AACxC,WAAK,KAAK,KAAK;AACf,UAAI,MAAM,GAAG,QAAQ,GAAG;AACxB,UAAI,MAAM,GAAG;AACT,aAAK,GAAG,UAAU,GAAG,GAAG,EAAE,KAAK;AAAE;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,OAAO,IAAI;AACX,YAAQ,IAAI,EAAE;AACd,YAAQ,WAAW;AAAA,EACvB,OAAO;AACH,YAAQ,WAAW;AAAA,EACvB;AACJ;AAEA,QAAQ,WAAW;AAEnB,QAAO,QAAQ,KAAK,CAAC,GAAG;AAAA,EACpB,KAAK;AACD,sBAAkB;AAClB;AAAA,EACJ,KAAK;AACD,WAAO;AACP;AACR;",
  "names": []
}
